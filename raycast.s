;------------------------------------------------------------------------------
; raycast.s
;
; Copyright 2021 Tim Kelsall. All rights reserved.
;------------------------------------------------------------------------------
; Memory layout:
; ra - player.x      (12.4 FP)
; rb - player.y      (12.4 FP)
; rc - player.angle  (2.14 FP)
;------------------------------------------------------------------------------

N_COLUMNS   equ   160

init:             ldi ra, 0x80          ; position (8.0,8.0)
                  ldi rb, 0x80
                  ldi rc, 0x00          ; angle (0.0) (north)
                  ldi re, 0
                  ldi rf, 2
                  bgc 1

main:             call drw_columns
                  vblnk
                  cls
                  jmp main

drw_columns:      xor rd, rd
drw_columnsL:     cmpi rd, 160
                  jz drw_columnsZ
                  mov r0, rd
                  call cast_ray
                  call dist_to_size
                  mov r3, r0
                  shl r0, 8
                  andi r0, 0xff00
                  addi r0, 1
                  ldi r2, drw_columnsSpr
                  stm r0, r2
                  db 0x04,0x00
drw_columnsSpr:   db 0x00,0x00
                  mul rd, rf, r0
                  shr r3, 1
                  ldi r2, 120
                  sub r2, r3
                  drw r0, r2, d_spr_pal_f
                  addi rd, 1
                  jmp drw_columnsL
drw_columnsZ:     ret

;------------------------------------------------------------------------------
; Cast a ray from (ra,rb) at angle (rc) for screen column (r0).
; Returns:
; r0 - intersection distance
; r1 - intersection color
cast_ray:         ldi r0, 0x200
                  ldi r1, 0xf
                  ret

;------------------------------------------------------------------------------
; Translate a distance to a map wall (r0), to a vertical height on screen.
; Returns:
; r0 - height in pixels
dist_to_size:     ldi r1, 480
                  shr r0, 4               ; 12.4 FP -> integer
                  div r1, r0, r0
                  ret

;------------------------------------------------------------------------------
; Data
;------------------------------------------------------------------------------
d_map:
db 0x00,0x00,0x00,0x00,0x00,0x11,0x11,0x11,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

d_spr_pal_f:   
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,0xffff,
dw 0xffff,0xffff,0xffff,0xffff
